cv2.cvtColor(image, cv2.COLOR_BGR2GRAY) - преобразование исходного изображения в грдации серого

cv2.threshold(gray_image, 200, 255, cv2.THRESH_BINARY) - возвращает изображение, в котором все пиксели, 
которые темнее (меньше) 200 замененяются на 0, а все, которые ярче (больше) 200, — на 255

cv2.findContours(image=binary_image, mode=cv2.RETR_TREE, method=cv2.CHAIN_APPROX_NONE) -
осуществляет поиск контуров на бинарном изображении

cv2.drawContours(image=image_copy, contours=sel_contours, contourIdx=-1, color=(255, 0, 0), thickness=2, lineType=cv2.LINE_AA) -
рисование контуров на изображении

подробнее о find и draw: https://waksoft.susu.ru/2021/11/30/obnaruzhenie-kongurov-s-ispolzovaniem-opencv/

cv2.boundingRect(contour[0]) - поиск обрамляемого квадрата вокруг контура, возвращает значение в формате (x, y, w, h)
(коррдината верхнего левого края, ширина, высота)

cv2.rectangle(image_copy2, (x, y), (x+w, y+h), color = (255, 0, 0), thickness = 2) - рисование квадрата на изобрадении
(изобрадение, коррдинаты верхнего левого края, координаты правого нижнего края, цвет линии, толщена линии)

cv2.arcLengthsel_countour, True) - Функция arcLength возвращает длину дуг контуров. Получив длину дуги контура, мы вычисляем так называемый эпсилон – параметр, характеризующий точность аппроксимации. 
В качестве критерия используется максимальное расстояние между исходной кривой и ее аппроксимацией.
for countour in contours:
    arclen = cv2.arcLength(countour, True)
    
    eps = 0.0005
    epsilon = arclen * eps
    approximations = cv2.approxPolyDP(countour, epsilon, True)
    cv2.drawContours(image=image_copy, contours=[approximations], contourIdx=-1, color=(255, 0, 0), thickness=2,
             	     lineType=cv2.LINE_AA)